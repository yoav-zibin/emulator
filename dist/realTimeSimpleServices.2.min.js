var emulatorServicesCompilationDate="Sun Jul 19 19:25:52 EDT 2015";angular.module("myApp").service("realTimeSimpleService",["$window","$log","$timeout","messageService","randomService",function(a,b,c,d,e){"use strict";function f(){c(function(){b.info("Sending gotStartMatch"),i({gotStartMatch:{playersInfo:[{playerId:42}],randomSeed:"someRandomSeed"+e.doNotUseInYourGameGetOriginalMathRandom()}})},500)}function g(a){if(!(a&&a.gotStartMatch&&a.gotMessage&&a.gotEndMatch))throw new Error("You must pass a game to init(game) with the methods: gotStartMatch, gotMessage, and gotEndMatch.");if(n)throw new Error("You can call realTimeSimpleService.init(game) exactly once!");n=a,o?f():(d.addMessageListener(i),d.sendMessage({gameReady:!0}))}function h(a){if(o){if(!a.endMatch)throw new Error("Shouldn't send messages in local testing");f()}else d.sendMessage(a)}function i(b){if(a.lastMessage=b,b.gotStartMatch){if(p&&n.gotEndMatch(null),p=b.gotStartMatch.playersInfo,1===p.length)b.gotStartMatch.yourPlayerIndex=0;else if(void 0===b.gotStartMatch.yourPlayerIndex)throw new Error("Can't do single-device multiplayer using realTimeSimpleService!");e.setSeed(b.gotStartMatch.randomSeed),n.gotStartMatch(b.gotStartMatch)}else if(b.gotMessage){if(!p)return;n.gotMessage(b.gotMessage)}else{if(void 0===b.gotEndMatch)throw new Error("Unknown message: "+angular.toJson(b));if(!p)return;p=null,n.gotEndMatch(b.gotEndMatch)}}function j(a){if(!a||"string"!=typeof a)throw new Error("When calling realTimeService.sendReliableMessage(message), you must pass a non-empty string as the message.");if(a.length>=1e3&&console.log("CAREFUL: Maximum message length is 1000, but you passed a message of length "+a.length+". The platform will try to zip the message, but if it is still big then the match will be ended in a tie"),!p)throw new Error("You must not send a message before getting game.startMatch")}function k(a){j(a),1!==p.length&&h({sendReliableMessage:a})}function l(a){j(a),1!==p.length&&h({sendUnreliableMessage:a})}function m(a){if(!p)throw new Error("You must not call realTimeService.endMatch(endMatchScores) before getting game.gotStartMatch");if(!a||a.length!==p.length)throw new Error("When calling realTimeService.endMatch(endMatchScores), you must pass an array of the same length as the number of players in gotStartMatch.");n.gotEndMatch(a),p=null,h({endMatch:a})}var n,o=a.parent===a,p=null;this.init=g,this.sendReliableMessage=k,this.sendUnreliableMessage=l,this.endMatch=m}]),angular.module("myApp").service("messageService",["$window","logSaver","$rootScope",function(a,b,c){"use strict";var d=location.toString();this.sendMessage=function(c){b.info("Game sent message",c),c.gameUrl=d,a.parent.postMessage(c,"*")},this.addMessageListener=function(d){a.addEventListener("message",function(e){var f=e.source;if(f===a.parent){var g=e.data;b.info("Game got message",g),c.$apply(function(){d(g)})}},!1)}}]).factory("$exceptionHandler",["$window","logSaver",function(a,b){"use strict";function c(c,d){var e=[];e.push("Game URL: "+a.location),e.push("exception: "+c),e.push("stackTrace: "+(c&&c.stack?c.stack.replace(/\n/g,"\n	"):"no stack trace :(")),e.push("cause: "+d),e.push("Game logs: "+b.getLogs().replace(/\n/g,"\n	"));var f=e.join("\n	");console.error("Game had an exception:\n",f),a.parent.postMessage({emailJavaScriptError:f},"*")}return window.onerror=function(a,b,d,e,f){c(f,"Error: "+a+" Script: "+b+" Line: "+d+" Column: "+e)},c}]),angular.module("myApp").service("logSaver",function(){"use strict";function a(){return window.performance?window.performance.now():(new Date).getTime()}function b(b){return{time:a()-n,args:b}}function c(a){m.length>100&&m.shift(),m.push(b(a))}function d(a,b){for(var c=a.length-1;c>=0;c--){for(var d=a[c],e=[],f=0;f<d.args.length;f++){var g=d.args[f],h=""+g;"[object Object]"===h&&(h=angular.toJson(g)),e.push(h)}b.push("Time "+(d.time/1e3).toFixed(3)+": "+e.join(","))}}function e(){var a=[];return a.push("Always-logs:\n"),d(l,a),a.push("\n\nRecent-logs:\n"),d(m,a),a.join("\n")}function f(){l.push(b(arguments)),console.info.apply(console,arguments)}function g(){c(arguments),console.info.apply(console,arguments)}function h(){c(arguments),console.debug.apply(console,arguments)}function i(){c(arguments),console.warn.apply(console,arguments)}function j(){c(arguments),console.error.apply(console,arguments)}function k(){c(arguments),console.log.apply(console,arguments)}var l=[],m=[],n=a();f("emulatorServicesCompilationDate="+emulatorServicesCompilationDate),this.getCurrentTime=a,this.getLogs=e,this.alwaysLog=f,this.info=g,this.debug=h,this.error=j,this.warn=i,this.log=k}),angular.module("myApp").service("randomService",function(){"use strict";function a(a){if(void 0===a)throw new Error("You forgot to pass randomIndex when calling randomService method, e.g., you should call randomService.random(42); randomIndex should be an index of a random number. In a specific match, calling randomService.random(42) multiple times will return the same random number.")}if(!Math.seedrandom)throw new Error("You forgot to include in your HTML: <script src='http://cdnjs.cloudflare.com/ajax/libs/seedrandom/2.3.11/seedrandom.min.js'></script>");var b=Math.random,c=null,d=null,e=null;this.setSeed=function(a){e=a,d=[],Math.seedrandom(e),c=Math.random,Math.random=function(){throw new Error("Do NOT use Math.random(); Instead, use randomService.random(randomIndex)")}},this.random=function(b){a(b);for(var e=d.length;b>=e;e++)d[e]=c();return d[b]},this.randomFromTo=function(b,c,d){if(a(b),void 0===c||void 0===d||c>=d)throw new Error("In randomService.randomFromTo(randomIndex, from,to), you must have from<to, but from="+c+" to="+d);return Math.floor(this.random(b)*(d-c)+c)},this.doNotUseInYourGameGetOriginalMathRandom=function(){return b()},this.setSeed(0)}),angular.module("myApp").service("resizeGameAreaService",["$window","$log",function(a,b){"use strict";function c(a){if(g=a,f=i.getElementById("gameArea"),!f)throw new Error("You forgot to add to your <body> this div: <div id='gameArea'>...</div>");h=null,e()}function d(a){return Math.round(100*a)/100}function e(){if(null!==g){var c=a.innerWidth,e=a.innerHeight,i=c,j=e;if(null===h||h.windowWidth!==i||h.windowHeight!==j){if(h={windowWidth:i,windowHeight:j},0===i||0===j)return b.info("Window width/height is 0 so hiding gameArea div."),void(f.style.display="none");f.style.display="block";var k=i/j;k>g?i=d(j*g):j=d(i/g),b.info("Window size is "+h.windowWidth+"x"+h.windowHeight+" so setting gameArea size to "+i+"x"+j+" because widthToHeight="+g);var l=.95;i*=l,j*=l,f.style.width=i+"px",f.style.height=j+"px",f.style.position="absolute",f.style.left=(c-i)/2+"px",f.style.top=(e-j)/2+"px"}}}var f,g=null,h=null,i=a.document;a.onresize=e,a.onorientationchange=e,i.addEventListener("onresize",e),i.addEventListener("orientationchange",e),setInterval(e,1e3),this.setWidthToHeight=c}]),function(){"use strict";function a(){var a,b,c=window.navigator,d=["language","browserLanguage","systemLanguage","userLanguage"];if(angular.isArray(c.languages))for(a=0;a<c.languages.length;a++)if(b=c.languages[a],b&&b.length)return b;for(a=0;a<d.length;a++)if(b=c[d[a]],b&&b.length)return b;return null}function b(){return(a()||"").split("-").join("_")}function c(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}function d(a){for(var b=[],d=angular.lowercase(a),e=0,g=f.length;g>e;e++)b.push(angular.lowercase(f[e]));if(c(b,d)>-1)return a;var h=a.split("_");return h.length>1&&c(b,angular.lowercase(h[0]))>-1?h[0]:f[0]}function e(){var a=g.lang?g.lang:b(),c=d(a);if(-1===f.indexOf(c))throw new Error("YOAV: the selected language ("+c+") must be in $availableLanguageKeys="+f);return c}if(!angular)throw new Error('You must first include angular: <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.3.8/angular.min.js"></script>');if(angular.isArray(window.angularTranslationLanguages)){var f=window.angularTranslationLanguages,g=function(){var a=location.search.substr(1),b={};return a.split("&").forEach(function(a){var c=a.split("=");b[c[0]]=decodeURIComponent(c[1])}),b}(),h=e();console.log("Language is "+h),window.angularLanguage=h,window.angularTranslationsLoaded=function(a,b){console.log("angularTranslationsLoaded called with language="+a),window.angularTranslations=b};var i="<script src='languages/"+h+".js'></script>";document.write(i)}}(),angular.module("myApp").factory("$translate",["$interpolate","logSaver",function(a,b){"use strict";function c(a){if(!e&&window.localStorage){var c=window.localStorage.getItem(a);c&&(e=angular.fromJson(c),f=a,b.alwaysLog("Loaded translations from localStorage for "+a))}}function d(b,c){var d=e[b];if(!d)throw new Error("Couldn't find translationId="+b+" in language="+f);return a(d)(c||{})}var e=window.angularTranslations,f=window.angularLanguage;if(!f)throw new Error("You must include angularTranslate like this:\n<script>\nwindow.angularTranslationLanguages = ['en', ...];\n</script>\n<script src=\"http://yoav-zibin.github.io/emulator/angular-translate/angular-translate.min.js\"></script>\n");if(e&&window.localStorage&&(b.alwaysLog("Storing translations for "+f),window.localStorage.setItem(f,angular.toJson(e))),c(f),!e)for(var g=window.angularTranslationLanguages,h=0;h<g.length;h++)c(g[h]);if(!e)throw new Error("Couldn't load language="+f+" neither from the internet nor from localStorage");return window.$translate=d,d.getLanguage=function(){return f},d}]).filter("translate",["$parse","$translate",function(a,b){"use strict";return function(c,d){return angular.isObject(d)||(d=a(d)(this)),b(c,d)}}]),angular.module("myApp").factory("dragAndDropService",["$log",function(a){"use strict";function b(b,c){function d(a){var b=a.changedTouches[0];h(a,a.type,b.clientX,b.clientY)}function e(a){i=!0,h(a,"touchstart",a.clientX,a.clientY)}function f(a){i&&h(a,"touchmove",a.clientX,a.clientY)}function g(a){i=!1,h(a,"touchend",a.clientX,a.clientY)}function h(b,d,e,f){b.preventDefault&&b.preventDefault(),b.stopPropagation&&b.stopPropagation(),b.cancelBubble=!0,b.returnValue=!1,a.debug("handleDragEvent:",d,e,f),c(d,e,f,b)}if(!b||!c)throw new Error("When calling addDragListener(touchElementId, handleDragEvent), you must pass two parameters");var i=!1,j=document.getElementById(b);if(!j)throw new Error("You must have <div id='"+b+"'>...</div>");j.addEventListener("touchstart",d,!0),j.addEventListener("touchmove",d,!0),j.addEventListener("touchend",d,!0),j.addEventListener("touchcancel",d,!0),j.addEventListener("touchleave",d,!0),j.addEventListener("mousedown",e,!0),j.addEventListener("mousemove",f,!0),j.addEventListener("mouseup",g,!0)}return{addDragListener:b}}]);
//# sourceMappingURL=realTimeSimpleServices.2.min.js.map