"use strict";var emulatorServicesCompilationDate="Mon Jan 2 10:33:29 EST 2017",gamingPlatform;!function(a){var b;!function(a){function b(){return(new Date).getTime()}function c(a,c,d){var e=b()-o,f=e/1e3,g=["",f," seconds:"].concat(a);return d.apply(console,g),{millisecondsFromStart:e,args:a,logLevel:c}}function d(a,b,d){n.length>100&&n.shift(),n.push(c(a,b,d))}function e(){return n.concat(m)}function f(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];m.push(c(a,l.ALWAYS,console.log))}function g(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];d(a,l.INFO,console.log)}function h(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];d(a,l.DEBUG,console.debug)}function i(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];d(a,l.WARN,console.warn)}function j(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];d(a,l.ERROR,console.error)}function k(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];d(a,l.LOG,console.log)}var l=function(){function a(){}return a.ALWAYS="ALWAYS",a.LOG="LOG",a.INFO="INFO",a.DEBUG="DEBUG",a.WARN="WARN",a.ERROR="ERROR",a}(),m=[],n=[],o=b();a.getCurrentTime=b,a.getLogs=e,a.alwaysLog=f,a.info=g,a.debug=h,a.warn=i,a.error=j,a.log=k,window.addEventListener("error",function(a){j("Had an error! Message=",a.error?a.error.message:""," stacktrace=",a.error?a.error.stack:"")})}(b=a.log||(a.log={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(b){function c(b){a.log.info("Game sent message",b),b.gameUrl=e,window.parent.postMessage(b,"*")}function d(b){window.addEventListener("message",function(c){var d=c.source;if(d===window.parent){var e=c.data;a.log.info("Game got message",e),a.$rootScope.$apply(function(){b(e)})}},!1)}var e=location.toString();b.sendMessage=c,b.addMessageListener=d}(b=a.messageService||(a.messageService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(b){function c(a){if(D[a])return D[a];for(var b=[],c=0;a>c;c++)b.push(c);return D[a]=b,b}function d(){a.log.log("playModeChanged: playMode=",b.playMode),i(),b.iframeRows=0,b.iframeCols=0,a.$timeout(function(){"community"==b.playMode?(b.iframeRows=b.numberOfPlayers,b.iframeCols=x):"multiplayer"==b.playMode?(b.iframeRows=1,b.iframeCols=b.numberOfPlayers+1):(b.iframeRows=1,b.iframeCols=1)})}function e(a){if(!a)throw new Error("Game called makeMove with a null move="+a);var b=-1===a.turnIndexAfterMove,c=!!a.endMatchScores;if(b&&!c)throw new Error("Illegal move: turnIndexAfterMove was -1 but you forgot to set endMatchScores. Move="+angular.toJson(a,!0));if(c&&!b)throw new Error("Illegal move: you set endMatchScores but you didn't set turnIndexAfterMove to -1. Move="+angular.toJson(a,!0))}function f(a,b){if(!a)throw new Error("Game called makeMove before getting updateUI or it called makeMove more than once for a single updateUI.");var c=a.move.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.move.turnIndexAfterMove;if(!c)throw new Error("Game called makeMove when it wasn't your turn: yourPlayerIndex="+a.yourPlayerIndex+" turnIndexAfterMove="+a.move.turnIndexAfterMove);e(b)}function g(a,b,c){if(!a)throw new Error("Don't call communityMove before getting communityUI.");c&&e(c);var d=a.move.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.move.turnIndexAfterMove;if(!d)throw new Error("Called communityMove when it wasn't your turn: yourPlayerIndex="+a.yourPlayerIndex+" turnIndexAfterMove="+a.move.turnIndexAfterMove);var f=a.playerIdToProposal[a.yourPlayerInfo.playerId];if(f)throw new Error("Called communityMove when yourPlayerId already made a proposal, see: "+angular.toJson(f,!0))}function h(b){a.messageService.sendMessage(b)}function i(){z=[];for(var a=0;a<b.numberOfPlayers;a++){var c="onlyAIs"===b.playMode||0!==a&&"playAgainstTheComputer"===b.playMode?"":""+(a+42);z.push({playerId:c,avatarImageUrl:null,displayName:null})}}function j(a,b){var c=window.document.getElementById("game_iframe_"+b);c.contentWindow.postMessage(a,"*")}function k(a){for(var b=0;;){var c=window.document.getElementById("game_iframe_"+b);if(!c)return console.error("Can't find src=",a),-1;if(c.contentWindow===a)return b;b++}}function l(){a.log.info("Overriding body's html"),b.locationTrustedStr=a.$sce.trustAsResourceUrl(location.toString());var c=angular.element(A);window.document.body.innerHTML="",angular.element(window.document.body).append(a.$compile(c)(a.$rootScope)),window.addEventListener("message",p)}function m(a){return"community"==b.playMode?Math.floor(a/x):"multiplayer"==b.playMode?a==b.numberOfPlayers?-2:a:B.move.turnIndexAfterMove}function n(a){var c=m(a);if("community"==b.playMode){var d={yourPlayerIndex:c,yourPlayerInfo:{avatarImageUrl:"",displayName:"",playerId:"playerId"+a},playerIdToProposal:C,numberOfPlayers:b.numberOfPlayers,stateBeforeMove:B.stateBeforeMove,turnIndexBeforeMove:B.turnIndexBeforeMove,move:B.move};return{communityUI:d}}var e={yourPlayerIndex:c,playersInfo:z,numberOfPlayers:b.numberOfPlayers,stateBeforeMove:B.stateBeforeMove,turnIndexBeforeMove:B.turnIndexBeforeMove,move:B.move,playMode:"multiplayer"==b.playMode?c:b.playMode};return{updateUI:e}}function o(a){j(n(a),a)}function p(c){var d=c.source,e=k(d);if(-1!=e){var h=m(e),i=c.data;if(a.log.info("Platform got message",i),i.gameReady)o(e);else{var j=i.lastMessage;if(!angular.equals(j,n(e)))return void console.error("Ignoring message because message.lastMessage is wrong! This can happen in theory if you play and immediately changed something like playMode");var l=i.move,p=i.proposal;if(j.communityUI?g(j.communityUI,p,l):f(j.updateUI,l),h!==B.move.turnIndexAfterMove)throw new Error("Not your turn! yourPlayerIndex="+h+" and the turn is of playerIndex="+B.move.turnIndexAfterMove);l?(B={move:l,turnIndexBeforeMove:B.move.turnIndexAfterMove,numberOfPlayers:B.numberOfPlayers,stateBeforeMove:B.move.stateAfterMove},C={}):C["playerId"+e]=p,setTimeout(function(){for(var a=0;a<b.iframeRows;a++)for(var c=0;c<b.iframeCols;c++){var d=a+c*b.iframeCols;o(d)}},100)}}}function q(a,b){g(E.communityUI,a,b),h({proposal:a,move:b,lastMessage:E}),E=null}function r(a){f(E.updateUI,a),h({move:a,lastMessage:E}),E=null}function s(a){E=angular.copy({updateUI:a}),y.updateUI(a)}function t(a){E=angular.copy({communityUI:a}),y.communityUI(a)}function u(b){if(b.communityUI)t(b.communityUI);else if(b.updateUI)s(b.updateUI);else if(b.setLanguage)a.translate.setLanguage(b.setLanguage.language);else if(b.getGameLogs){var c=angular.fromJson(angular.toJson(a.log.getLogs()));setTimeout(function(){h({getGameLogsResult:c})})}else b.getStateForOgImage&&h({sendStateForOgImage:y.getStateForOgImage()})}function v(c){if(y=c,i(),F)throw new Error("You can call setGame exactly once!");F=!0,a.log.info("Called setGame"),w?(a.$rootScope.gameService=b,a.$timeout(l,50)):a.messageService.addMessageListener(u),h({gameReady:"v4"}),a.log.info("Calling 'fake' updateUI with yourPlayerIndex=-2 , meaning you're a viewer so you can't make a move"),s({yourPlayerIndex:-2,playersInfo:z,numberOfPlayers:b.numberOfPlayers,stateBeforeMove:B.stateBeforeMove,turnIndexBeforeMove:B.turnIndexBeforeMove,move:B.move,playMode:"passAndPlay"})}var w=window.parent===window,x=5;b.playModes=["passAndPlay","playAgainstTheComputer","onlyAIs","multiplayer","community"],b.playMode="passAndPlay",b.languageCode="en",b.numberOfPlayers=2,b.iframeRows=1,b.iframeCols=1,b.locationTrustedStr=null;var y,z,A='\n    <div style="position:absolute; width:100%; height:10%;">\n      <select\n        ng-options="playMode for playMode in gameService.playModes track by playMode"\n        ng-model="gameService.playMode"\n        ng-change="gameService.playModeChanged()"></select>\n    </div>\n    <div style="position:absolute; width:100%; height:90%; top: 10%;">\n      <div ng-repeat="row in gameService.getIntegersTill(gameService.iframeRows)"\n          style="position:absolute; top:{{row * 100 / gameService.iframeRows}}%; left:0; width:100%; height:{{100 / gameService.iframeRows}}%;">\n        <div ng-repeat="col in gameService.getIntegersTill(gameService.iframeCols)"\n            style="position:absolute; top:0; left:{{col * 100 / gameService.iframeCols}}%; width:{{100 / gameService.iframeCols}}%; height:100%;">\n          <iframe id="game_iframe_{{row + col*gameService.iframeCols}}"\n            ng-src="gameService.locationTrustedStr"\n            seamless="seamless" style="position:absolute; width:100%; height:100%;">\n          </iframe>\n        </div>\n      </div>\n    </div>\n  ',B={numberOfPlayers:b.numberOfPlayers,stateBeforeMove:null,turnIndexBeforeMove:0,move:{endMatchScores:null,turnIndexAfterMove:0,stateAfterMove:null}},C={},D=[];b.getIntegersTill=c,b.playModeChanged=d,b.checkMove=e;var E=null;b.communityMove=q,b.makeMove=r,b.callUpdateUI=s,b.callCommunityUI=t;var F=!1;b.setGame=v}(b=a.gameService||(a.gameService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(a){function b(a,b,d,e,f,g){var h=c(a,b,d,e,f,g);return h?h:d(a,b)[0]}function c(a,b,c,f,g,h){if(!a||!c||!f)throw new Error("startingState or getNextStates or getStateScoreForIndex0 is null/undefined");if(0!==b&&1!==b)throw new Error("playerIndex must be either 0 or 1");if(!h.millisecondsLimit&&!h.maxDepth)throw new Error("alphaBetaLimits must have either millisecondsLimit or maxDepth");h.millisecondsLimit&&(h.millisecondsLimit=Math.min(400,h.millisecondsLimit));var i=(new Date).getTime();if(h.maxDepth)return e(a,b,c,f,g,h,i,0,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY).bestState;null!=g&&console.log("Doing iterative-deepeninh (A*) until we run out of time or find a certain win/lose move.");for(var j,k=1;;){null!=g&&console.log("Alpha-beta search until maxDepth="+k);var l=e(a,b,c,f,g,{maxDepth:k,millisecondsLimit:h.millisecondsLimit},i,0,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY),m=l.bestScore,n=l.bestState;if(m===Number.POSITIVE_INFINITY||m===Number.NEGATIVE_INFINITY){var o=m===(0===b?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY);return console.log("Discovered that AI is going to "+(o?"win":"lose")+" with maxDepth="+k),null!=g&&console.log("Best state is "+g(n)),n}var p=d({millisecondsLimit:h.millisecondsLimit/2},i),q=d(h,i);if(p||q){var r=q&&1!==k?j:n;return q?console.log("Run out of time when maxDepth="+k+", so returning the best state for maxDepth="+(1===k?1:k-1)):console.log("Run out of half the time when maxDepth="+k+", so no point of exploring the next depth."),null!=g&&console.log("Best state is "+g(r)),r}j=n,k++}}function d(a,b){return a.millisecondsLimit&&(new Date).getTime()-b>a.millisecondsLimit}function e(a,b,c,f,g,h,i,j,k,l){var m=null,n=null;if(d(h,i))return null!=g&&console.log("Run out of time, just quitting from this traversal."),{bestScore:0,bestState:null};if(j===h.maxDepth)return m=f(a,b),null!=g&&console.log("Max depth reached, score is "+m),{bestScore:m,bestState:null};var o=c(a,b);if(null!=g&&console.log(g(a)+" has "+o.length+" next states"),0===o.length)return m=f(a,b),null!=g&&console.log("Terminal state, score is "+m),{bestScore:m,bestState:null};for(var p=0;p<o.length;p++){var q=o[p],r=e(q,1-b,c,f,g,h,i,j+1,k,l).bestScore;if(null!=g&&console.log("Score of "+g(q)+" is "+r),(null===m||0===b&&r>m||1===b&&m>r)&&(m=r,n=q),0===b){if(m>=l)return{bestScore:m,bestState:n};k=Math.max(k,m)}else{if(k>=m)return{bestScore:m,bestState:n};l=Math.min(l,m)}}return null!=g&&console.log("Best next state for playerIndex "+b+" is "+g(n)+" with score of "+m),{bestScore:m,bestState:n}}a.alphaBetaDecision=b}(b=a.alphaBetaService||(a.alphaBetaService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(b){function c(b,c){if(a.log.info("setWidthToHeight to ",b),g=b,h=c,f=j.getElementById("gameArea"),!f)throw new Error("You forgot to add to your <body> this div: <div id='gameArea'>...</div>");i=null,e(),setTimeout(e,10),setTimeout(e,100)}function d(a){return Math.round(100*a)/100}function e(){if(null!==g){var b=window.innerWidth,c=window.innerHeight,j=b,k=c;if(null===i||i.windowWidth!==j||i.windowHeight!==k){if(i={windowWidth:j,windowHeight:k},0===j||0===k)return a.log.info("Window width/height is 0 so hiding gameArea div."),void(f.style.display="none");f.style.display="block",a.$rootScope.$apply(function(){var l=j/k;l>g?j=d(k*g):k=d(j/g),a.log.info("Window size is "+i.windowWidth+"x"+i.windowHeight+" so setting gameArea size to "+j+"x"+k+" because widthToHeight="+g);var m=.95;j*=m,k*=m,f.style.width=j+"px",f.style.height=k+"px",f.style.position="absolute",f.style.left=(b-j)/2+"px",f.style.top=(c-k)/2+"px",h&&h(j,k),setTimeout(e,10)})}}}var f,g=null,h=null,i=null,j=window.document;b.setWidthToHeight=c,j.addEventListener("onresize",e),j.addEventListener("orientationchange",e),window.matchMedia&&window.matchMedia("(orientation: portrait)").addListener(e),setInterval(e,300)}(b=a.resizeGameAreaService||(a.resizeGameAreaService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){function b(){function b(b,d,f){f||(f=c);var g=null;if(e&&e[b]){var h=e[b];g=h[f],g||(g=h.en)}g||(g="["+b+"]",a.log.error("Couldn't find translationId="+b+" in language="+f));var i=a.$interpolate(g)(d||{});return-1!==i.indexOf("{{")&&a.log.error("You forgot to pass a translation parameter (interpolateParams) for translationId="+b+" in language="+f+" which resulted in '"+i+"' (note that you forgot to pass some {{XXX}})"),i}var c,d,e=null;return d=b,d.getLanguage=function(){return c},d.setTranslations=function(a){e=a},d.setLanguage=function(a){c=a},d}a.translate=b(),a.defaultTranslateInterpolateParams={},angular.module("translate",[]).filter("translate",["$parse",function(b){var c=function(c,d){return angular.isObject(d)||(d=b(d)(this)),d||(d=a.defaultTranslateInterpolateParams),a.translate(c,d)};return c.$stateful=!0,c}])}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(a){function b(a,b){function c(a){var b=a.changedTouches[0];g(a,a.type,b.clientX,b.clientY)}function d(a){h=!0,g(a,"touchstart",a.clientX,a.clientY)}function e(a){h&&g(a,"touchmove",a.clientX,a.clientY)}function f(a){h=!1,g(a,"touchend",a.clientX,a.clientY)}function g(a,c,d,e){a.preventDefault&&a.preventDefault(),a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0,a.returnValue=!1,console.log("handleDragEvent:",c,d,e),b(c,d,e,a)}if(!a||!b)throw new Error("When calling addDragListener(touchElementId, handleDragEvent), you must pass two parameters");var h=!1,i=document.getElementById(a);if(!i)throw new Error("You must have <div id='"+a+"'>...</div>");i.addEventListener("touchstart",c,!0),i.addEventListener("touchmove",c,!0),i.addEventListener("touchend",c,!0),i.addEventListener("touchcancel",c,!0),i.addEventListener("touchleave",c,!0),i.addEventListener("mousedown",d,!0),i.addEventListener("mousemove",e,!0),i.addEventListener("mouseup",f,!0)}a.addDragListener=b}(b=a.dragAndDropService||(a.dragAndDropService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){window.oncontextmenu=function(a){return a.preventDefault(),a.stopPropagation(),!1},angular.module("gameServices",["translate"]).config(["$provide",function(a){a.decorator("$rootScope",["$delegate",function(a){return a.unsafeOldApply=a.$apply,a.$apply=function(b){var c=a.$$phase;"$apply"===c||"$digest"===c?b&&"function"==typeof b&&b():a.unsafeOldApply(b)},a}])}]).run(["$location","$rootScope","$timeout","$interval","$interpolate","$compile","$sce",function(b,c,d,e,f,g,h){a.$location=b,a.$rootScope=c,a.$timeout=d,a.$interval=e,a.$interpolate=f,a.$compile=g,a.$sce=h,a.log.alwaysLog("Finished init of gameServices module; emulatorServicesCompilationDate=",emulatorServicesCompilationDate)}]).factory("$exceptionHandler",function(){function b(b,c){var d={gameUrl:""+window.location,exception:""+b,stack:""+(b?b.stack:"no stack"),cause:c,gameLogs:a.log.getLogs()};console.error("Game had an exception:\n",b," Full error message with logs: ",d),window.alert("Game had an unexpected error. If you know JavaScript, you can look at the console and try to debug it :)");var e=angular.fromJson(angular.toJson(d));window.parent.postMessage({emailJavaScriptError:e},"*")}return window.onerror=function(a,c,d,e,f){b(f,"Error: "+a+" Script: "+c+" Line: "+d+" Column: "+e)},b})}(gamingPlatform||(gamingPlatform={}));
//# sourceMappingURL=turnBasedServices.4.min.js.map